var searchIndex = JSON.parse('{\
"npm_package_json":{"doc":"`serde` mappings for npm\'s `package.json` file format.","i":[[3,"Bug","npm_package_json","A bug contacting form.",null,null],[12,"email","","The email to use for contact.",0,null],[12,"url","","The url to use to submit bugs.",0,null],[3,"Person","","A person.",null,null],[12,"name","","The name of a person.",1,null],[12,"email","","The email of a person.",1,null],[12,"url","","The homepage of the person.",1,null],[3,"Repository","","A repository.",null,null],[12,"type","","The version control system that the repository uses.",2,null],[12,"url","","The url to the repository.",2,null],[12,"directory","","The directory that the repository is in. Often used for…",2,null],[3,"Package","","The top-level `package.json` structure.",null,null],[12,"name","","The package name.",3,null],[12,"version","","The package version.",3,null],[12,"description","","The optional package description.",3,null],[12,"keywords","","The optional list of keywords.",3,null],[12,"homepage","","The optional package homepage.",3,null],[12,"bugs","","The optional bug contact form.",3,null],[12,"license","","The optional package license.",3,null],[12,"author","","The optional author.",3,null],[12,"contributors","","The optional list of contributors.",3,null],[12,"files","","The optional list of files to include. Each entry defines…",3,null],[12,"main","","The optional package main entry file.",3,null],[12,"browser","","The optional package browser entry file.",3,null],[12,"bin","","The optional set of binary definitions.",3,null],[12,"man","","The optional list of man page references.",3,null],[12,"repository","","The optional repository reference.",3,null],[12,"scripts","","The optional list of script entries.",3,null],[12,"dependencies","","The optional list of dependencies.",3,null],[12,"dev_dependencies","","The optional list of development dependencies.",3,null],[12,"peer_dependencies","","The optional list of peer dependencies.",3,null],[12,"bundled_dependencies","","The optional list of bundled dependencies.",3,null],[12,"optional_dependencies","","The optional list of optional dependencies.",3,null],[12,"engines","","The optional list of engine entries.",3,null],[12,"private","","The package privacy.",3,null],[12,"os","","The OS\' that the package can run on.",3,null],[12,"cpu","","The CPU architectures that the package can run on.",3,null],[12,"others","","Other custom fields that have been defined inside the…",3,null],[4,"Error","","The errors that this library can return.",null,null],[13,"Io","","An error that happened during IO operations.",4,null],[13,"Parse","","An error that happened during the parsing stage.",4,null],[4,"PersonReference","","A reference to a person.",null,null],[13,"Short","","A short reference.",5,null],[13,"Full","","A full reference.",5,null],[4,"ManReference","","A reference to a man page.",null,null],[13,"Single","","A single man page reference. Points to one single file.",6,null],[13,"Multiple","","Multiple man pages, can contain anything from zero to n.",6,null],[4,"RepositoryReference","","A repository reference.",null,null],[13,"Short","","A short reference to the repository. Has to have the…",7,null],[13,"Full","","A full reference.",7,null],[6,"BinSet","","An ordered map for `bin` entries.",null,null],[6,"DepsSet","","An ordered map for `dependencies` entries.",null,null],[6,"EnginesSet","","An ordered map for `engines` entries.",null,null],[6,"ScriptsSet","","An ordered map for `scripts` entries.",null,null],[6,"Result","","The result type of this crate.",null,null],[11,"new","","Creates a new default bug.",0,[[]]],[11,"with","","Creates a new bug with the given values.",0,[[["string",3],["option",4]]]],[11,"new","","Creates a default person.",1,[[]]],[11,"with_name","","Creates a person with a given name.",1,[[["string",3]]]],[11,"with","","Creates a person with the given values.",1,[[["string",3],["option",4]]]],[11,"new","","Creates a new default package.",3,[[]]],[11,"from_path","","Deserializes a `Package` from a file path.",3,[[],["result",6]]],[11,"from_reader","","Deserializes a `Package` from an IO stream.",3,[[["read",8]],["result",6]]],[11,"from_slice","","Deserializes a `Package` from bytes.",3,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",4,[[["ioerror",3]]]],[11,"from","","",4,[[["serdeerror",3]]]],[11,"clone","","",0,[[],["bug",3]]],[11,"clone","","",1,[[],["person",3]]],[11,"clone","","",5,[[],["personreference",4]]],[11,"clone","","",6,[[],["manreference",4]]],[11,"clone","","",2,[[],["repository",3]]],[11,"clone","","",7,[[],["repositoryreference",4]]],[11,"clone","","",3,[[],["package",3]]],[11,"default","","",0,[[],["bug",3]]],[11,"default","","",1,[[],["person",3]]],[11,"default","","",2,[[],["repository",3]]],[11,"default","","",3,[[],["package",3]]],[11,"eq","","",0,[[["bug",3]]]],[11,"ne","","",0,[[["bug",3]]]],[11,"eq","","",1,[[["person",3]]]],[11,"ne","","",1,[[["person",3]]]],[11,"eq","","",5,[[["personreference",4]]]],[11,"ne","","",5,[[["personreference",4]]]],[11,"eq","","",6,[[["manreference",4]]]],[11,"ne","","",6,[[["manreference",4]]]],[11,"eq","","",2,[[["repository",3]]]],[11,"ne","","",2,[[["repository",3]]]],[11,"eq","","",7,[[["repositoryreference",4]]]],[11,"ne","","",7,[[["repositoryreference",4]]]],[11,"eq","","",3,[[["package",3]]]],[11,"ne","","",3,[[["package",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"from_str","","Deserializes a `Package` from a string.",3,[[],["result",4]]],[11,"source","","",4,[[],[["error",8],["option",4]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]]],"p":[[3,"Bug"],[3,"Person"],[3,"Repository"],[3,"Package"],[4,"Error"],[4,"PersonReference"],[4,"ManReference"],[4,"RepositoryReference"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);